; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:esp32-s3-n16r8]
platform = espressif32
board = esp32-s3-devkitc-1
framework = arduino
monitor_speed = 115200 ; must be the same of Serial.begin()

board_build.arduino.memory_type = qio_opi

board_upload.flash_size = 16MB
board_upload.maximum_size = 16777216  ; 16 * 1024 * 1024 bytes
board_build.arduino.partitions = default_16MB.csv
; lib's identifier can only use " " instead of "_", when it doesn't have version number
lib_deps = 
    fastled/fastled
    adafruit/Adafruit NeoPixel
    WireGuard-ESP32

; my configuration
build_flags = 
; WiFi config
    -D WiFi_SSID="\"S\""
    -D WiFi_password="\"#Conquer1\""
    -D WiFi_proxyhost="\"lsj.128555.xyz\""
    -D WiFi_proxyport="44357"
; OpenAI API
    ; ***********THIS API KEY IS JUST FOR MYSELF, DO NOT COPY************
    -D API_KEY="\"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\""
    -D WHISPER_ENDPOINT="\"https://api.openai.com/v1/audio/transcriptions\""
    -D WHISPER_MODEL="\"whisper-1\""
    -D BOUNDARY="\"---00110101110001111100\"" ; This must be unique that won't appear in file data (220284)
; WS2812B configuration
    -D NUMS_WS2812B="64"  ; WS2812B pixels

; ESP32 datasheets
    -D ALE_LM386="1"      ; pin1[OUTPUT]: LM386 address latch enable 
    -D SOC_LM386="2"      ; pin2[OUTPUT]: LM386 start of conversion
    -D OE_LM386="3"       ; pin3[OUTPUT]: LM386 output enable
    -D EOC_LM386="4"      ; pin4[INPUT]: LM386 end of conversion
    -D ABC_LM386="5"      ; pin5[OUTPUT]: LM386 address line (only use one pin to switch between 0 and 1)
    -D CLOCK_LM386="8"    ; pin8[OUTPUT]: LM386 clock
    -D DOUT_LM386="10"    ; pin10[INPUT]: LM386 data output (only use one line)
    -D DIN_WS2812B="16"   ; pin16[OUTPUT]: WS2812B data input
; Emoji data
    -D SMILE="0"
    -D 
